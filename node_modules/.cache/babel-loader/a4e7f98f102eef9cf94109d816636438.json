{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport YahooAPI from './YahooAPI.js';\nimport DOMParser from 'react-native-html-parser';\nimport { extractContent } from './api';\nimport { getCryptoCoinName } from './api';\nimport { getCryptoCoinMarketCap } from './api';\nimport { getCryptoCoinPrice } from './api';\nimport { getCryptoCoinVolume } from './api';\nimport { getCryptoCoinCirculatingSupply } from './api';\nimport { getCryptoCoinChange } from './api';\nimport { getCryptoCoinPriceGraphImg } from './api';\nimport bitCoinGraph from './crypto_graph_images/Bitcoin.png';\nimport etheumGraph from './crypto_graph_images/Ethereum.png';\nimport xrpGraph from './crypto_graph_images/XRP.png';\nimport eosGraph from './crypto_graph_images/EOS.png';\nimport stellarGraph from './crypto_graph_images/Stellar.png';\nimport lightCoinGraph from './crypto_graph_images/Lightcoin.png';\nimport bitCoinSVGraph from './crypto_graph_images/Bitcoin_SV.png';\nimport tetherGraph from './crypto_graph_images/Tether.png';\nimport cardanoGraph from './crypto_graph_images/Cardano.png';\nimport tronGraph from './crypto_graph_images/TRON.png';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      seconds: 0,\n      symbol: '',\n      regularMarketPrice: '',\n      sharesOutstanding: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getAPIData\",\n    value: function getAPIData() {\n      var _this2 = this;\n\n      fetch('http://35.185.32.97/quote/AAPL').then(function (resp) {\n        return resp.json();\n      }).then(function (respJson) {\n        _this2.reactMain(respJson);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } // end getAPIData\n\n  }, {\n    key: \"reactMain\",\n    value: function reactMain(respJson) {\n      var mySymbol = respJson.symbol;\n      var myRegularMarketPrice = respJson.regularMarketPrice;\n      var mySharesOutstanding = respJson.sharesOutstanding;\n      this.state = {\n        symbol: mySymbol,\n        regularMarketPrice: myRegularMarketPrice,\n        sharesOutstanding: mySharesOutstanding\n      }; // alert(this.state.symbol);\n      // alert(this.state.regularMarketPrice);\n      // alert(this.state.sharesOutstanding);\n\n      console.log(respJson.symbol);\n      console.log(respJson.regularMarketPrice);\n      console.log(respJson.sharesOutstanding); //alert(respJson.symbol);\n\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 1\n        };\n      });\n    } // end reactMain\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.interval = setInterval(function () {\n        return _this3.getAPIData();\n      }, 10000);\n    } // end componentDidMount\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    } // function componentDidMount() {\n    //   if ( this.state.intialCompDidMount ==  false) {\n    //     this.state.intialCompDidMount = true;\n    //     this.interval = setInterval(() => this.getCryptoData(), 10);\n    //   } else {\n    //     this.interval = setInterval(() => this.getCryptoData(), 10000);\n    //   }\n    // } // end componentDidMount\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" \", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"TESTING\"), React.createElement(YahooAPI, {\n        symbolProp: this.state.symbol,\n        regularMarketPriceProp: this.state.regularMarketPrice,\n        sharesOutstandingProp: this.state.sharesOutstanding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kylep/IdeaProjects/CryptoTrends/CryptoTrends/my-app/src/App.js"],"names":["React","Component","YahooAPI","DOMParser","extractContent","getCryptoCoinName","getCryptoCoinMarketCap","getCryptoCoinPrice","getCryptoCoinVolume","getCryptoCoinCirculatingSupply","getCryptoCoinChange","getCryptoCoinPriceGraphImg","bitCoinGraph","etheumGraph","xrpGraph","eosGraph","stellarGraph","lightCoinGraph","bitCoinSVGraph","tetherGraph","cardanoGraph","tronGraph","App","props","state","seconds","symbol","regularMarketPrice","sharesOutstanding","fetch","then","resp","json","respJson","reactMain","catch","error","console","log","mySymbol","myRegularMarketPrice","mySharesOutstanding","setState","prevState","interval","setInterval","getAPIData","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport YahooAPI from './YahooAPI.js';\r\nimport DOMParser from 'react-native-html-parser'\r\nimport { extractContent } from './api'\r\nimport { getCryptoCoinName } from './api'\r\nimport { getCryptoCoinMarketCap } from './api'\r\nimport { getCryptoCoinPrice } from './api'\r\nimport { getCryptoCoinVolume } from './api'\r\nimport { getCryptoCoinCirculatingSupply } from './api'\r\nimport { getCryptoCoinChange } from './api'\r\nimport { getCryptoCoinPriceGraphImg } from './api'\r\nimport bitCoinGraph from './crypto_graph_images/Bitcoin.png';\r\nimport etheumGraph from './crypto_graph_images/Ethereum.png';\r\nimport xrpGraph from './crypto_graph_images/XRP.png';\r\nimport eosGraph from './crypto_graph_images/EOS.png';\r\nimport stellarGraph from './crypto_graph_images/Stellar.png';\r\nimport lightCoinGraph from './crypto_graph_images/Lightcoin.png';\r\nimport bitCoinSVGraph from './crypto_graph_images/Bitcoin_SV.png';\r\nimport tetherGraph from './crypto_graph_images/Tether.png';\r\nimport cardanoGraph from './crypto_graph_images/Cardano.png';\r\nimport tronGraph from './crypto_graph_images/TRON.png';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seconds: 0,\r\n      symbol: '',\r\n      regularMarketPrice: '',\r\n      sharesOutstanding: ''\r\n    }\r\n  }\r\n\r\n  getAPIData() {\r\n    fetch('http://35.185.32.97/quote/AAPL')\r\n        .then((resp) => {\r\n          return resp.json();\r\n        })\r\n        .then((respJson) => {\r\n          this.reactMain(respJson)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        });\r\n  } // end getAPIData\r\n\r\n  reactMain(respJson) {\r\n\r\n    let mySymbol = respJson.symbol;\r\n    let myRegularMarketPrice =  respJson.regularMarketPrice;\r\n    let mySharesOutstanding = respJson.sharesOutstanding;\r\n\r\n    this.state = ({\r\n      symbol: mySymbol,\r\n      regularMarketPrice: myRegularMarketPrice,\r\n      sharesOutstanding: mySharesOutstanding\r\n    });\r\n    // alert(this.state.symbol);\r\n    // alert(this.state.regularMarketPrice);\r\n    // alert(this.state.sharesOutstanding);\r\n\r\n\r\n    console.log(respJson.symbol);\r\n    console.log(respJson.regularMarketPrice);\r\n    console.log(respJson.sharesOutstanding);\r\n    //alert(respJson.symbol);\r\n    this.setState(prevState => ({\r\n      seconds: prevState.seconds + 1\r\n    }));\r\n  } // end reactMain\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.getAPIData(), 10000)\r\n  } // end componentDidMount\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n// function componentDidMount() {\r\n//   if ( this.state.intialCompDidMount ==  false) {\r\n//     this.state.intialCompDidMount = true;\r\n//     this.interval = setInterval(() => this.getCryptoData(), 10);\r\n//   } else {\r\n//     this.interval = setInterval(() => this.getCryptoData(), 10000);\r\n//   }\r\n// } // end componentDidMount\r\n\r\n  render() {\r\n    return (<div className=\"App\"> <h1>TESTING</h1>\r\n          <YahooAPI\r\n            symbolProp = {this.state.symbol}\r\n            regularMarketPriceProp = {this.state.regularMarketPrice}\r\n            sharesOutstandingProp = {this.state.sharesOutstanding}\r\n          />\r\n        </div>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}