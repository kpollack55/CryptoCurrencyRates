{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kylep\\\\IdeaProjects\\\\CryptoTrends\\\\CryptoTrends\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CryptoCoin from './CryptoCoin.js';\nimport DOMParser from 'react-native-html-parser';\nimport { extractContent } from './api';\nimport { getCryptoCoinName } from './api';\nimport { getCryptoCoinMarketCap } from './api';\nimport { getCryptoCoinPrice } from './api';\nimport { getCryptoCoinVolume } from './api';\nimport { getCryptoCoinCirculatingSupply } from './api';\nimport { getCryptoCoinChange } from './api';\nimport { getCryptoCoinPriceGraphImg } from './api';\nimport bitCoinGraph from './crypto_graph_images/Bitcoin.png';\nimport etheumGraph from './crypto_graph_images/Ethereum.png';\nimport xrpGraph from './crypto_graph_images/XRP.png';\nimport eosGraph from './crypto_graph_images/EOS.png';\nimport stellarGraph from './crypto_graph_images/Stellar.png';\nimport lightCoinGraph from './crypto_graph_images/Lightcoin.png';\nimport bitCoinSVGraph from './crypto_graph_images/Bitcoin_SV.png';\nimport tetherGraph from './crypto_graph_images/Tether.png';\nimport cardanoGraph from './crypto_graph_images/Cardano.png';\nimport tronGraph from './crypto_graph_images/TRON.png';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      seconds: 0,\n      intialCompDidMount: false,\n      // Initialize state so user does not see blank data upon load.\n      bitCoinName: 'Bitcoin',\n      bitCoinMarketCap: '$183,291,780,609',\n      bitCoinPrice: '$10212.89',\n      bitCoinVolume: '$16,968,085,280',\n      bitCoinCirculatingSupply: '17,947,100 BTC',\n      bitCoinChange: '3.12%',\n      bitCoinImgGraph: bitCoinGraph,\n      ethereumName: 'Ethereum',\n      ethereumMarketCap: '$23,291,888,034',\n      ethereumPrice: '$216.00',\n      ethereumVolume: '$7,787,723,916',\n      ethereumCirculatingSupply: '107,834,026 ETH',\n      ethereumChange: '-0.78%',\n      ethereumImgGraph: etheumGraph,\n      xrpName: 'XRP',\n      xrpMarketCap: '$12,421,571,048',\n      xrpPrice: '$0.288505',\n      xrpVolume: '$1,383,669,254',\n      xrpCirculatingSupply: '43,055,012,634 XRP',\n      xrpChange: '-1.08%',\n      xrpImgGraph: xrpGraph,\n      eosName: 'EOS',\n      eosMarketCap: '$3,741,247,938',\n      eosPrice: '$4.01',\n      eosVolume: '$1,839,379,975',\n      eosCirculatingSupply: '932,659,885 EOS',\n      eosChange: '2.74%',\n      eosImgGraph: eosGraph,\n      stellarName: 'Stellar',\n      stellarMarketCap: '$1,438,586,971',\n      stellarPrice: '$0.071626',\n      stellarVolume: '$305,442,391',\n      stellarCirculatingSupply: '20,084,647,543 XLM',\n      stellarChange: '-3.93%',\n      stellarImgGraph: stellarGraph,\n      liteCoinName: 'Litecoin',\n      liteCoinMarketCap: '$4,663,244,432',\n      liteCoinPrice: '$73.66',\n      liteCoinVolume: '$2,891,917,243',\n      liteCoinCirculatingSupply: '63,304,229 LTC',\n      liteCoinChange: '-2.63%',\n      liteCoinImgGraph: lightCoinGraph,\n      bitCoinSVName: 'Bitcoin SV',\n      bitCoinSVMarketCap: '$2,184,179,021',\n      bitCoinSVPrice: '$122.33',\n      bitCoinSVVolume: '$296,450,747',\n      bitCoinSVCirculatingSupply: '17,854,986 BSV',\n      bitCoinSVChange: '-1.31%',\n      bitCoinSVImgGraph: bitCoinSVGraph,\n      tetherName: 'Tether',\n      tetherMarketCap: '$4,115,654,843',\n      tetherPrice: '$1.00',\n      tetherVolume: '$17,459,924,055',\n      tetherCirculatingSupply: '4,108,044,456 USDT',\n      tetherChange: '-0.07%',\n      tetherImgGraph: tetherGraph,\n      cardanoName: 'Cardano',\n      cardanoMarketCap: '$1,346,194,017',\n      cardanoPrice: '$0.051922',\n      cardanoVolume: '$98,908,964',\n      cardanoCirculatingSupply: '25,927,070,538 ADA',\n      cardanoChange: '1.53%',\n      cardanoImgGraph: cardanoGraph,\n      tronName: 'TRON',\n      tronMarketCap: '$1,167,854,792',\n      tronPrice: '$0.017514',\n      tronVolume: '$604,474,681',\n      tronCirculatingSupply: '66,682,072,191 TRX',\n      tronChange: '0.54%',\n      tronImgGraph: tronGraph\n    };\n    return _this;\n  } // end constructor\n\n\n  _createClass(App, [{\n    key: \"getCryptoData\",\n    value: function getCryptoData() {\n      var _this2 = this;\n\n      fetch('http://localhost:3001/').then(function (resp) {\n        return resp.text();\n      }).then(function (data) {\n        _this2.getCryptoCoinData(data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    } // end getCryptoData\n\n  }, {\n    key: \"getCryptoCoinData\",\n    value: function getCryptoCoinData(data) {\n      var parser = new DOMParser.DOMParser();\n      var parsed = parser.parseFromString(data, 'text/html');\n      var bitcoin = parsed.getElementsByAttribute('id', 'id-bitcoin');\n      var bitCoinName = getCryptoCoinName(bitcoin);\n      bitCoinName = extractContent(bitCoinName);\n      var bitCoinMarketCap = getCryptoCoinMarketCap(bitcoin);\n      bitCoinMarketCap = extractContent(bitCoinMarketCap);\n      var bitCoinPrice = getCryptoCoinPrice(bitcoin);\n      bitCoinPrice = extractContent(bitCoinPrice);\n      var bitCoinVolume = getCryptoCoinVolume(bitcoin);\n      bitCoinVolume = extractContent(bitCoinVolume);\n      var bitCoinCirculatingSupply = getCryptoCoinCirculatingSupply(bitcoin);\n      bitCoinCirculatingSupply = extractContent(bitCoinCirculatingSupply);\n      var bitCoinChange = getCryptoCoinChange(bitcoin);\n      bitCoinChange = extractContent(bitCoinChange);\n      var bitCoinImgGraph = getCryptoCoinPriceGraphImg(bitcoin);\n      bitCoinImgGraph = extractContent(bitCoinImgGraph);\n      this.setState({\n        bitCoinMarketCap: bitCoinMarketCap,\n        bitCoinName: bitCoinName,\n        bitCoinPrice: bitCoinPrice,\n        bitCoinVolume: bitCoinVolume,\n        bitCoinCirculatingSupply: bitCoinCirculatingSupply,\n        bitCoinChange: bitCoinChange,\n        bitCoinImgGraph: bitCoinImgGraph\n      });\n      var ethereum = parsed.getElementsByAttribute('id', 'id-ethereum');\n      var ethereumName = getCryptoCoinName(ethereum);\n      ethereumName = extractContent(ethereumName);\n      var ethereumMarketCap = getCryptoCoinMarketCap(ethereum);\n      ethereumMarketCap = extractContent(ethereumMarketCap);\n      var ethereumPrice = getCryptoCoinPrice(ethereum);\n      ethereumPrice = extractContent(ethereumPrice);\n      var ethereumVolume = getCryptoCoinVolume(ethereum);\n      ethereumVolume = extractContent(ethereumVolume);\n      var ethereumCirculatingSupply = getCryptoCoinCirculatingSupply(ethereum);\n      ethereumCirculatingSupply = extractContent(ethereumCirculatingSupply);\n      var ethereumChange = getCryptoCoinChange(ethereum);\n      ethereumChange = extractContent(ethereumChange);\n      var ethereumImgGraph = getCryptoCoinPriceGraphImg(ethereum);\n      ethereumImgGraph = extractContent(ethereumImgGraph);\n      this.setState({\n        ethereumName: ethereumName,\n        ethereumMarketCap: ethereumMarketCap,\n        ethereumPrice: ethereumPrice,\n        ethereumVolume: ethereumVolume,\n        ethereumCirculatingSupply: ethereumCirculatingSupply,\n        ethereumChange: ethereumChange,\n        ethereumImgGraph: ethereumImgGraph\n      });\n      var xrp = parsed.getElementsByAttribute('id', 'id-ripple');\n      var xrpName = getCryptoCoinName(xrp);\n      xrpName = extractContent(xrpName);\n      var xrpMarketCap = getCryptoCoinMarketCap(xrp);\n      xrpMarketCap = extractContent(xrpMarketCap);\n      var xrpPrice = getCryptoCoinPrice(xrp);\n      xrpPrice = extractContent(xrpPrice);\n      var xrpVolume = getCryptoCoinVolume(xrp);\n      xrpVolume = extractContent(xrpVolume);\n      var xrpCirculatingSupply = getCryptoCoinCirculatingSupply(xrp);\n      xrpCirculatingSupply = extractContent(xrpCirculatingSupply);\n      var xrpChange = getCryptoCoinChange(xrp);\n      xrpChange = extractContent(xrpChange);\n      var xrpImgGraph = getCryptoCoinPriceGraphImg(xrp);\n      xrpImgGraph = extractContent(xrpImgGraph);\n      this.setState({\n        xrpName: xrpName,\n        xrpMarketCap: xrpMarketCap,\n        xrpPrice: xrpPrice,\n        xrpVolume: xrpVolume,\n        xrpCirculatingSupply: xrpCirculatingSupply,\n        xrpChange: xrpChange,\n        xrpImgGraph: xrpImgGraph\n      });\n      var eos = parsed.getElementsByAttribute('id', 'id-eos');\n      var eosName = getCryptoCoinName(eos);\n      eosName = extractContent(eosName);\n      var eosMarketCap = getCryptoCoinMarketCap(eos);\n      eosMarketCap = extractContent(eosMarketCap);\n      var eosPrice = getCryptoCoinPrice(eos);\n      eosPrice = extractContent(eosPrice);\n      var eosVolume = getCryptoCoinVolume(eos);\n      eosVolume = extractContent(eosVolume);\n      var eosCirculatingSupply = getCryptoCoinCirculatingSupply(eos);\n      eosCirculatingSupply = extractContent(eosCirculatingSupply);\n      var eosChange = getCryptoCoinChange(eos);\n      eosChange = extractContent(eosChange);\n      var eosImgGraph = getCryptoCoinPriceGraphImg(eos);\n      eosImgGraph = extractContent(eosImgGraph);\n      this.setState({\n        eosName: eosName,\n        eosMarketCap: eosMarketCap,\n        eosPrice: eosPrice,\n        eosVolume: eosVolume,\n        eosCirculatingSupply: eosCirculatingSupply,\n        eosChange: eosChange,\n        eosImgGraph: eosImgGraph\n      });\n      var stellar = parsed.getElementsByAttribute('id', 'id-stellar');\n      var stellarName = getCryptoCoinName(stellar);\n      stellarName = extractContent(stellarName);\n      var stellarMarketCap = getCryptoCoinMarketCap(stellar);\n      stellarMarketCap = extractContent(stellarMarketCap);\n      var stellarPrice = getCryptoCoinPrice(stellar);\n      stellarPrice = extractContent(stellarPrice);\n      var stellarVolume = getCryptoCoinVolume(stellar);\n      stellarVolume = extractContent(stellarVolume);\n      var stellarCirculatingSupply = getCryptoCoinCirculatingSupply(stellar);\n      stellarCirculatingSupply = extractContent(stellarCirculatingSupply);\n      var stellarChange = getCryptoCoinChange(stellar);\n      stellarChange = extractContent(stellarChange);\n      var stellarImgGraph = getCryptoCoinPriceGraphImg(stellar);\n      stellarImgGraph = extractContent(stellarImgGraph);\n      this.setState({\n        stellarName: stellarName,\n        stellarMarketCap: stellarMarketCap,\n        stellarPrice: stellarPrice,\n        stellarVolume: stellarVolume,\n        stellarCirculatingSupply: stellarCirculatingSupply,\n        stellarChange: stellarChange,\n        stellarImgGraph: stellarImgGraph\n      });\n      var liteCoin = parsed.getElementsByAttribute('id', 'id-litecoin');\n      var liteCoinName = getCryptoCoinName(liteCoin);\n      liteCoinName = extractContent(liteCoinName);\n      var liteCoinMarketCap = getCryptoCoinMarketCap(liteCoin);\n      liteCoinMarketCap = extractContent(liteCoinMarketCap);\n      var liteCoinPrice = getCryptoCoinPrice(liteCoin);\n      liteCoinPrice = extractContent(liteCoinPrice);\n      var liteCoinVolume = getCryptoCoinVolume(liteCoin);\n      liteCoinVolume = extractContent(liteCoinVolume);\n      var liteCoinCirculatingSupply = getCryptoCoinCirculatingSupply(liteCoin);\n      liteCoinCirculatingSupply = extractContent(liteCoinCirculatingSupply);\n      var liteCoinChange = getCryptoCoinChange(liteCoin);\n      liteCoinChange = extractContent(liteCoinChange);\n      var liteCoinImgGraph = getCryptoCoinPriceGraphImg(liteCoin);\n      liteCoinImgGraph = extractContent(liteCoinImgGraph);\n      this.setState({\n        liteCoinName: liteCoinName,\n        liteCoinMarketCap: liteCoinMarketCap,\n        liteCoinPrice: liteCoinPrice,\n        liteCoinVolume: liteCoinVolume,\n        liteCoinCirculatingSupply: liteCoinCirculatingSupply,\n        liteCoinChange: liteCoinChange,\n        liteCoinImgGraph: liteCoinImgGraph\n      });\n      var bitCoinSV = parsed.getElementsByAttribute('id', 'id-bitcoin-sv');\n      var bitCoinSVName = getCryptoCoinName(bitCoinSV);\n      bitCoinSVName = extractContent(bitCoinSVName);\n      var bitCoinSVMarketCap = getCryptoCoinMarketCap(bitCoinSV);\n      bitCoinSVMarketCap = extractContent(bitCoinSVMarketCap);\n      var bitCoinSVPrice = getCryptoCoinPrice(bitCoinSV);\n      bitCoinSVPrice = extractContent(bitCoinSVPrice);\n      var bitCoinSVVolume = getCryptoCoinVolume(bitCoinSV);\n      bitCoinSVVolume = extractContent(bitCoinSVVolume);\n      var bitCoinSVCirculatingSupply = getCryptoCoinCirculatingSupply(bitCoinSV);\n      bitCoinSVCirculatingSupply = extractContent(bitCoinSVCirculatingSupply);\n      var bitCoinSVChange = getCryptoCoinChange(bitCoinSV);\n      bitCoinSVChange = extractContent(bitCoinSVChange);\n      var bitCoinSVImgGraph = getCryptoCoinPriceGraphImg(bitCoinSV);\n      bitCoinSVImgGraph = extractContent(bitCoinSVImgGraph);\n      this.setState({\n        bitCoinSVName: bitCoinSVName,\n        bitCoinSVMarketCap: bitCoinSVMarketCap,\n        bitCoinSVPrice: bitCoinSVPrice,\n        bitCoinSVVolume: bitCoinSVVolume,\n        bitCoinSVCirculatingSupply: bitCoinSVCirculatingSupply,\n        bitCoinSVChange: bitCoinSVChange,\n        bitCoinSVImgGraph: bitCoinSVImgGraph\n      });\n      var tether = parsed.getElementsByAttribute('id', 'id-tether');\n      var tetherName = getCryptoCoinName(tether);\n      tetherName = extractContent(tetherName);\n      var tetherMarketCap = getCryptoCoinMarketCap(tether);\n      tetherMarketCap = extractContent(tetherMarketCap);\n      var tetherPrice = getCryptoCoinPrice(tether);\n      tetherPrice = extractContent(tetherPrice);\n      var tetherVolume = getCryptoCoinVolume(tether);\n      tetherVolume = extractContent(tetherVolume);\n      var tetherCirculatingSupply = getCryptoCoinCirculatingSupply(tether);\n      tetherCirculatingSupply = extractContent(tetherCirculatingSupply);\n      var tetherChange = getCryptoCoinChange(tether);\n      tetherChange = extractContent(tetherChange);\n      var tetherImgGraph = getCryptoCoinPriceGraphImg(tether);\n      tetherImgGraph = extractContent(tetherImgGraph);\n      this.setState({\n        tetherName: tetherName,\n        tetherMarketCap: tetherMarketCap,\n        tetherPrice: tetherPrice,\n        tetherVolume: tetherVolume,\n        tetherCirculatingSupply: tetherCirculatingSupply,\n        tetherChange: tetherChange,\n        tetherImgGraph: tetherImgGraph\n      });\n      var cardano = parsed.getElementsByAttribute('id', 'id-cardano');\n      var cardanoName = getCryptoCoinName(cardano);\n      cardanoName = extractContent(cardanoName);\n      var cardanoMarketCap = getCryptoCoinMarketCap(cardano);\n      cardanoMarketCap = extractContent(cardanoMarketCap);\n      var cardanoPrice = getCryptoCoinPrice(cardano);\n      cardanoPrice = extractContent(cardanoPrice);\n      var cardanoVolume = getCryptoCoinVolume(cardano);\n      cardanoVolume = extractContent(cardanoVolume);\n      var cardanoCirculatingSupply = getCryptoCoinCirculatingSupply(cardano);\n      cardanoCirculatingSupply = extractContent(cardanoCirculatingSupply);\n      var cardanoChange = getCryptoCoinChange(cardano);\n      cardanoChange = extractContent(cardanoChange);\n      var cardanoImgGraph = getCryptoCoinPriceGraphImg(cardano);\n      cardanoImgGraph = extractContent(cardanoImgGraph);\n      this.setState({\n        cardanoName: cardanoName,\n        cardanoMarketCap: cardanoMarketCap,\n        cardanoPrice: cardanoPrice,\n        cardanoVolume: cardanoVolume,\n        cardanoCirculatingSupply: cardanoCirculatingSupply,\n        cardanoChange: cardanoChange,\n        cardanoImgGraph: cardanoImgGraph\n      });\n      var tron = parsed.getElementsByAttribute('id', 'id-tron');\n      var tronName = getCryptoCoinName(tron);\n      tronName = extractContent(tronName);\n      var tronMarketCap = getCryptoCoinMarketCap(tron);\n      tronMarketCap = extractContent(tronMarketCap);\n      var tronPrice = getCryptoCoinPrice(tron);\n      tronPrice = extractContent(tronPrice);\n      var tronVolume = getCryptoCoinVolume(tron);\n      tronVolume = extractContent(tronVolume);\n      var tronCirculatingSupply = getCryptoCoinCirculatingSupply(tron);\n      tronCirculatingSupply = extractContent(tronCirculatingSupply);\n      var tronChange = getCryptoCoinChange(tron);\n      tronChange = extractContent(tronChange);\n      var tronImgGraph = getCryptoCoinPriceGraphImg(tron);\n      tronImgGraph = extractContent(tronImgGraph);\n      this.setState({\n        tronName: tronName,\n        tronMarketCap: tronMarketCap,\n        tronPrice: tronPrice,\n        tronVolume: tronVolume,\n        tronCirculatingSupply: tronCirculatingSupply,\n        tronChange: tronChange,\n        tronImgGraph: tronImgGraph\n      });\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 1\n        };\n      });\n    } // end getCryptoCoinData\n\n  }, {\n    key: \"setCryptoCoin\",\n    value: function setCryptoCoin(cryptoCoin) {\n      var cryptoCoinName = getCryptoCoinName(cryptoCoin);\n      cryptoCoinName = extractContent(cryptoCoinName);\n      var cryptoCoinMarketCap = getCryptoCoinMarketCap(cryptoCoin);\n      cryptoCoinMarketCap = extractContent(cryptoCoinMarketCap);\n      var cryptoCoinPrice = getCryptoCoinPrice(cryptoCoin);\n      cryptoCoinPrice = extractContent(cryptoCoinPrice);\n      var cryptoCoinVolume = getCryptoCoinVolume(cryptoCoin);\n      cryptoCoinVolume = extractContent(cryptoCoinVolume);\n      var cryptoCoinCirculatingSupply = getCryptoCoinCirculatingSupply(cryptoCoin);\n      cryptoCoinCirculatingSupply = extractContent(cryptoCoinCirculatingSupply);\n      var cryptoCoinChange = getCryptoCoinChange(cryptoCoin);\n      cryptoCoinChange = extractContent(cryptoCoinChange);\n      var cryptoCoinImgGraph = getCryptoCoinPriceGraphImg(cryptoCoin);\n      cryptoCoinImgGraph = extractContent(cryptoCoinImgGraph);\n      this.setState({\n        cryptoCoinName: cryptoCoinName,\n        cryptoCoinMarketCap: cryptoCoinMarketCap,\n        cryptoCoinPrice: cryptoCoinPrice,\n        cryptoCoinVolume: cryptoCoinVolume,\n        cryptoCoinCirculatingSupply: cryptoCoinCirculatingSupply,\n        cryptoCoinChange: cryptoCoinChange,\n        cryptoCoinImgGraph: cryptoCoinImgGraph\n      });\n    } // end setCryptoCoin\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.state.intialCompDidMount == false) {\n        this.state.intialCompDidMount = true;\n        this.interval = setInterval(function () {\n          return _this3.getCryptoData();\n        }, 10);\n      } else {\n        this.interval = setInterval(function () {\n          return _this3.getCryptoData();\n        }, 10000);\n      }\n    } // end componentDidMount\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    } // end componentWillUnmount\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"crypto-currency-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Crypto Currencies Market Capitalization\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Market Cap\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \"Volume (24h)\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Circulating Supply\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Price Change (24h)\"), React.createElement(\"div\", {\n        className: \"crypto-coin-header col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Price Change (7 days)\")), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"headerLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.bitCoinName,\n        CryptoCoinMarketCapProp: this.state.bitCoinMarketCap,\n        CryptoCoinPriceProp: this.state.bitCoinPrice,\n        CryptoCoinVolumeProp: this.state.bitCoinVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.bitCoinCirculatingSupply,\n        CryptoCoinChangeProp: this.state.bitCoinChange + '%',\n        CryptoCoinImgGraphProp: this.state.bitCoinImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.ethereumName,\n        CryptoCoinMarketCapProp: this.state.ethereumMarketCap,\n        CryptoCoinPriceProp: this.state.ethereumPrice,\n        CryptoCoinVolumeProp: this.state.ethereumVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.ethereumCirculatingSupply,\n        CryptoCoinChangeProp: this.state.ethereumChange + '%',\n        CryptoCoinImgGraphProp: this.state.ethereumImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.xrpName,\n        CryptoCoinMarketCapProp: this.state.xrpMarketCap,\n        CryptoCoinPriceProp: this.state.xrpPrice,\n        CryptoCoinVolumeProp: this.state.xrpVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.xrpCirculatingSupply,\n        CryptoCoinChangeProp: this.state.xrpChange + '%',\n        CryptoCoinImgGraphProp: this.state.xrpImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.eosName,\n        CryptoCoinMarketCapProp: this.state.eosMarketCap,\n        CryptoCoinPriceProp: this.state.eosPrice,\n        CryptoCoinVolumeProp: this.state.eosVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.eosCirculatingSupply,\n        CryptoCoinChangeProp: this.state.eosChange + '%',\n        CryptoCoinImgGraphProp: this.state.eosImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.stellarName,\n        CryptoCoinMarketCapProp: this.state.stellarMarketCap,\n        CryptoCoinPriceProp: this.state.stellarPrice,\n        CryptoCoinVolumeProp: this.state.stellarVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.stellarCirculatingSupply,\n        CryptoCoinChangeProp: this.state.stellarChange + '%',\n        CryptoCoinImgGraphProp: this.state.stellarImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.liteCoinName,\n        CryptoCoinMarketCapProp: this.state.liteCoinMarketCap,\n        CryptoCoinPriceProp: this.state.liteCoinPrice,\n        CryptoCoinVolumeProp: this.state.liteCoinVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.liteCoinCirculatingSupply,\n        CryptoCoinChangeProp: this.state.liteCoinChange + '%',\n        CryptoCoinImgGraphProp: this.state.liteCoinImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.bitCoinSVName,\n        CryptoCoinMarketCapProp: this.state.bitCoinSVMarketCap,\n        CryptoCoinPriceProp: this.state.bitCoinSVPrice,\n        CryptoCoinVolumeProp: this.state.bitCoinSVVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.bitCoinSVCirculatingSupply,\n        CryptoCoinChangeProp: this.state.bitCoinSVChange + '%',\n        CryptoCoinImgGraphProp: this.state.bitCoinSVImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.tetherName,\n        CryptoCoinMarketCapProp: this.state.tetherMarketCap,\n        CryptoCoinPriceProp: this.state.tetherPrice,\n        CryptoCoinVolumeProp: this.state.tetherVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.tetherCirculatingSupply,\n        CryptoCoinChangeProp: this.state.tetherChange + '%',\n        CryptoCoinImgGraphProp: this.state.tetherImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.cardanoName,\n        CryptoCoinMarketCapProp: this.state.cardanoMarketCap,\n        CryptoCoinPriceProp: this.state.cardanoPrice,\n        CryptoCoinVolumeProp: this.state.cardanoVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.cardanoCirculatingSupply,\n        CryptoCoinChangeProp: this.state.cardanoChange + '%',\n        CryptoCoinImgGraphProp: this.state.cardanoImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      })), React.createElement(CryptoCoin, {\n        CryptoCoinNameProp: this.state.tronName,\n        CryptoCoinMarketCapProp: this.state.tronMarketCap,\n        CryptoCoinPriceProp: this.state.tronPrice,\n        CryptoCoinVolumeProp: this.state.tronVolume,\n        CryptoCoinCirculatingSupplyProp: this.state.tronCirculatingSupply,\n        CryptoCoinChangeProp: this.state.tronChange + '%',\n        CryptoCoinImgGraphProp: this.state.tronImgGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        className: \"rowLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kylep/IdeaProjects/CryptoTrends/CryptoTrends/my-app/src/App.js"],"names":["React","Component","CryptoCoin","DOMParser","extractContent","getCryptoCoinName","getCryptoCoinMarketCap","getCryptoCoinPrice","getCryptoCoinVolume","getCryptoCoinCirculatingSupply","getCryptoCoinChange","getCryptoCoinPriceGraphImg","bitCoinGraph","etheumGraph","xrpGraph","eosGraph","stellarGraph","lightCoinGraph","bitCoinSVGraph","tetherGraph","cardanoGraph","tronGraph","App","props","state","seconds","intialCompDidMount","bitCoinName","bitCoinMarketCap","bitCoinPrice","bitCoinVolume","bitCoinCirculatingSupply","bitCoinChange","bitCoinImgGraph","ethereumName","ethereumMarketCap","ethereumPrice","ethereumVolume","ethereumCirculatingSupply","ethereumChange","ethereumImgGraph","xrpName","xrpMarketCap","xrpPrice","xrpVolume","xrpCirculatingSupply","xrpChange","xrpImgGraph","eosName","eosMarketCap","eosPrice","eosVolume","eosCirculatingSupply","eosChange","eosImgGraph","stellarName","stellarMarketCap","stellarPrice","stellarVolume","stellarCirculatingSupply","stellarChange","stellarImgGraph","liteCoinName","liteCoinMarketCap","liteCoinPrice","liteCoinVolume","liteCoinCirculatingSupply","liteCoinChange","liteCoinImgGraph","bitCoinSVName","bitCoinSVMarketCap","bitCoinSVPrice","bitCoinSVVolume","bitCoinSVCirculatingSupply","bitCoinSVChange","bitCoinSVImgGraph","tetherName","tetherMarketCap","tetherPrice","tetherVolume","tetherCirculatingSupply","tetherChange","tetherImgGraph","cardanoName","cardanoMarketCap","cardanoPrice","cardanoVolume","cardanoCirculatingSupply","cardanoChange","cardanoImgGraph","tronName","tronMarketCap","tronPrice","tronVolume","tronCirculatingSupply","tronChange","tronImgGraph","fetch","then","resp","text","data","getCryptoCoinData","catch","error","console","parser","parsed","parseFromString","bitcoin","getElementsByAttribute","setState","ethereum","xrp","eos","stellar","liteCoin","bitCoinSV","tether","cardano","tron","prevState","cryptoCoin","cryptoCoinName","cryptoCoinMarketCap","cryptoCoinPrice","cryptoCoinVolume","cryptoCoinCirculatingSupply","cryptoCoinChange","cryptoCoinImgGraph","interval","setInterval","getCryptoData","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CryptoCoin from './CryptoCoin.js';\r\nimport DOMParser from 'react-native-html-parser'\r\nimport { extractContent } from './api'\r\nimport { getCryptoCoinName } from './api'\r\nimport { getCryptoCoinMarketCap } from './api'\r\nimport { getCryptoCoinPrice } from './api'\r\nimport { getCryptoCoinVolume } from './api'\r\nimport { getCryptoCoinCirculatingSupply } from './api'\r\nimport { getCryptoCoinChange } from './api'\r\nimport { getCryptoCoinPriceGraphImg } from './api'\r\nimport bitCoinGraph from './crypto_graph_images/Bitcoin.png';\r\nimport etheumGraph from './crypto_graph_images/Ethereum.png';\r\nimport xrpGraph from './crypto_graph_images/XRP.png';\r\nimport eosGraph from './crypto_graph_images/EOS.png';\r\nimport stellarGraph from './crypto_graph_images/Stellar.png';\r\nimport lightCoinGraph from './crypto_graph_images/Lightcoin.png';\r\nimport bitCoinSVGraph from './crypto_graph_images/Bitcoin_SV.png';\r\nimport tetherGraph from './crypto_graph_images/Tether.png';\r\nimport cardanoGraph from './crypto_graph_images/Cardano.png';\r\nimport tronGraph from './crypto_graph_images/TRON.png';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seconds: 0,\r\n      intialCompDidMount: false,\r\n\r\n      // Initialize state so user does not see blank data upon load.\r\n      bitCoinName: 'Bitcoin',\r\n      bitCoinMarketCap: '$183,291,780,609',\r\n      bitCoinPrice: '$10212.89',\r\n      bitCoinVolume: '$16,968,085,280',\r\n      bitCoinCirculatingSupply: '17,947,100 BTC',\r\n      bitCoinChange: '3.12%',\r\n      bitCoinImgGraph: bitCoinGraph,\r\n\r\n      ethereumName: 'Ethereum',\r\n      ethereumMarketCap: '$23,291,888,034',\r\n      ethereumPrice: '$216.00',\r\n      ethereumVolume: '$7,787,723,916',\r\n      ethereumCirculatingSupply: '107,834,026 ETH',\r\n      ethereumChange: '-0.78%',\r\n      ethereumImgGraph: etheumGraph,\r\n\r\n      xrpName: 'XRP',\r\n      xrpMarketCap: '$12,421,571,048',\r\n      xrpPrice: '$0.288505',\r\n      xrpVolume: '$1,383,669,254',\r\n      xrpCirculatingSupply: '43,055,012,634 XRP',\r\n      xrpChange: '-1.08%',\r\n      xrpImgGraph: xrpGraph,\r\n\r\n      eosName: 'EOS',\r\n      eosMarketCap: '$3,741,247,938',\r\n      eosPrice: '$4.01',\r\n      eosVolume: '$1,839,379,975',\r\n      eosCirculatingSupply: '932,659,885 EOS',\r\n      eosChange: '2.74%',\r\n      eosImgGraph: eosGraph,\r\n\r\n      stellarName: 'Stellar',\r\n      stellarMarketCap: '$1,438,586,971',\r\n      stellarPrice: '$0.071626',\r\n      stellarVolume: '$305,442,391',\r\n      stellarCirculatingSupply: '20,084,647,543 XLM',\r\n      stellarChange: '-3.93%',\r\n      stellarImgGraph: stellarGraph,\r\n\r\n      liteCoinName: 'Litecoin',\r\n      liteCoinMarketCap: '$4,663,244,432',\r\n      liteCoinPrice: '$73.66',\r\n      liteCoinVolume: '$2,891,917,243',\r\n      liteCoinCirculatingSupply: '63,304,229 LTC',\r\n      liteCoinChange: '-2.63%',\r\n      liteCoinImgGraph: lightCoinGraph,\r\n\r\n      bitCoinSVName: 'Bitcoin SV',\r\n      bitCoinSVMarketCap: '$2,184,179,021',\r\n      bitCoinSVPrice: '$122.33',\r\n      bitCoinSVVolume: '$296,450,747',\r\n      bitCoinSVCirculatingSupply: '17,854,986 BSV',\r\n      bitCoinSVChange: '-1.31%',\r\n      bitCoinSVImgGraph: bitCoinSVGraph,\r\n\r\n      tetherName: 'Tether',\r\n      tetherMarketCap: '$4,115,654,843',\r\n      tetherPrice: '$1.00',\r\n      tetherVolume: '$17,459,924,055',\r\n      tetherCirculatingSupply: '4,108,044,456 USDT',\r\n      tetherChange: '-0.07%',\r\n      tetherImgGraph: tetherGraph,\r\n\r\n      cardanoName: 'Cardano',\r\n      cardanoMarketCap: '$1,346,194,017',\r\n      cardanoPrice: '$0.051922',\r\n      cardanoVolume: '$98,908,964',\r\n      cardanoCirculatingSupply: '25,927,070,538 ADA',\r\n      cardanoChange: '1.53%',\r\n      cardanoImgGraph: cardanoGraph,\r\n\r\n      tronName: 'TRON',\r\n      tronMarketCap: '$1,167,854,792',\r\n      tronPrice: '$0.017514',\r\n      tronVolume: '$604,474,681',\r\n      tronCirculatingSupply: '66,682,072,191 TRX',\r\n      tronChange: '0.54%',\r\n      tronImgGraph: tronGraph\r\n    };\r\n  } // end constructor\r\n\r\n  getCryptoData() {\r\n    fetch('http://localhost:3001/')\r\n        .then((resp) => { return resp.text() })\r\n        .then((data) => {\r\n          this.getCryptoCoinData(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n  } // end getCryptoData\r\n\r\n  getCryptoCoinData(data){\r\n    const parser = new DOMParser.DOMParser();\r\n    const parsed = parser.parseFromString(data, 'text/html');\r\n\r\n    const bitcoin = parsed.getElementsByAttribute('id', 'id-bitcoin');\r\n    let bitCoinName = getCryptoCoinName(bitcoin);\r\n    bitCoinName = extractContent(bitCoinName);\r\n    let bitCoinMarketCap = getCryptoCoinMarketCap(bitcoin);\r\n    bitCoinMarketCap = extractContent(bitCoinMarketCap);\r\n    let bitCoinPrice = getCryptoCoinPrice(bitcoin);\r\n    bitCoinPrice = extractContent(bitCoinPrice);\r\n    let bitCoinVolume = getCryptoCoinVolume(bitcoin);\r\n    bitCoinVolume = extractContent(bitCoinVolume);\r\n    let bitCoinCirculatingSupply = getCryptoCoinCirculatingSupply(bitcoin);\r\n    bitCoinCirculatingSupply = extractContent(bitCoinCirculatingSupply);\r\n    let bitCoinChange = getCryptoCoinChange(bitcoin);\r\n    bitCoinChange = extractContent(bitCoinChange);\r\n    let bitCoinImgGraph = getCryptoCoinPriceGraphImg(bitcoin);\r\n    bitCoinImgGraph = extractContent(bitCoinImgGraph);\r\n\r\n    this.setState({\r\n      bitCoinMarketCap: bitCoinMarketCap,\r\n      bitCoinName: bitCoinName,\r\n      bitCoinPrice: bitCoinPrice,\r\n      bitCoinVolume: bitCoinVolume,\r\n      bitCoinCirculatingSupply: bitCoinCirculatingSupply,\r\n      bitCoinChange: bitCoinChange,\r\n      bitCoinImgGraph: bitCoinImgGraph\r\n    });\r\n\r\n    const ethereum = parsed.getElementsByAttribute('id', 'id-ethereum');\r\n    let ethereumName = getCryptoCoinName(ethereum);\r\n    ethereumName = extractContent(ethereumName);\r\n    let ethereumMarketCap = getCryptoCoinMarketCap(ethereum);\r\n    ethereumMarketCap = extractContent(ethereumMarketCap);\r\n    let ethereumPrice = getCryptoCoinPrice(ethereum);\r\n    ethereumPrice = extractContent(ethereumPrice);\r\n    let ethereumVolume = getCryptoCoinVolume(ethereum);\r\n    ethereumVolume = extractContent(ethereumVolume);\r\n    let ethereumCirculatingSupply = getCryptoCoinCirculatingSupply(ethereum);\r\n    ethereumCirculatingSupply = extractContent(ethereumCirculatingSupply);\r\n    let ethereumChange = getCryptoCoinChange(ethereum);\r\n    ethereumChange = extractContent(ethereumChange);\r\n    let ethereumImgGraph = getCryptoCoinPriceGraphImg(ethereum);\r\n    ethereumImgGraph = extractContent(ethereumImgGraph);\r\n\r\n    this.setState({\r\n      ethereumName: ethereumName,\r\n      ethereumMarketCap: ethereumMarketCap,\r\n      ethereumPrice: ethereumPrice,\r\n      ethereumVolume: ethereumVolume,\r\n      ethereumCirculatingSupply: ethereumCirculatingSupply,\r\n      ethereumChange: ethereumChange,\r\n      ethereumImgGraph: ethereumImgGraph\r\n    });\r\n\r\n    const xrp = parsed.getElementsByAttribute('id', 'id-ripple');\r\n    let xrpName = getCryptoCoinName(xrp);\r\n    xrpName = extractContent(xrpName);\r\n    let xrpMarketCap = getCryptoCoinMarketCap(xrp);\r\n    xrpMarketCap = extractContent(xrpMarketCap);\r\n    let xrpPrice = getCryptoCoinPrice(xrp);\r\n    xrpPrice = extractContent(xrpPrice);\r\n    let xrpVolume = getCryptoCoinVolume(xrp);\r\n    xrpVolume = extractContent(xrpVolume);\r\n    let xrpCirculatingSupply = getCryptoCoinCirculatingSupply(xrp);\r\n    xrpCirculatingSupply = extractContent(xrpCirculatingSupply);\r\n    let xrpChange = getCryptoCoinChange(xrp);\r\n    xrpChange = extractContent(xrpChange);\r\n    let xrpImgGraph = getCryptoCoinPriceGraphImg(xrp);\r\n    xrpImgGraph = extractContent(xrpImgGraph);\r\n\r\n    this.setState({\r\n      xrpName: xrpName,\r\n      xrpMarketCap: xrpMarketCap,\r\n      xrpPrice: xrpPrice,\r\n      xrpVolume: xrpVolume,\r\n      xrpCirculatingSupply: xrpCirculatingSupply,\r\n      xrpChange: xrpChange,\r\n      xrpImgGraph: xrpImgGraph\r\n    });\r\n\r\n    const eos = parsed.getElementsByAttribute('id', 'id-eos');\r\n    let eosName = getCryptoCoinName(eos);\r\n    eosName = extractContent(eosName);\r\n    let eosMarketCap = getCryptoCoinMarketCap(eos);\r\n    eosMarketCap = extractContent(eosMarketCap);\r\n    let eosPrice = getCryptoCoinPrice(eos);\r\n    eosPrice = extractContent(eosPrice);\r\n    let eosVolume = getCryptoCoinVolume(eos);\r\n    eosVolume = extractContent(eosVolume);\r\n    let eosCirculatingSupply = getCryptoCoinCirculatingSupply(eos);\r\n    eosCirculatingSupply = extractContent(eosCirculatingSupply);\r\n    let eosChange = getCryptoCoinChange(eos);\r\n    eosChange = extractContent(eosChange);\r\n    let eosImgGraph = getCryptoCoinPriceGraphImg(eos);\r\n    eosImgGraph = extractContent(eosImgGraph);\r\n\r\n    this.setState({\r\n      eosName: eosName,\r\n      eosMarketCap: eosMarketCap,\r\n      eosPrice: eosPrice,\r\n      eosVolume: eosVolume,\r\n      eosCirculatingSupply: eosCirculatingSupply,\r\n      eosChange: eosChange,\r\n      eosImgGraph: eosImgGraph\r\n    });\r\n\r\n    const stellar = parsed.getElementsByAttribute('id', 'id-stellar');\r\n    let stellarName = getCryptoCoinName(stellar);\r\n    stellarName = extractContent(stellarName);\r\n    let stellarMarketCap = getCryptoCoinMarketCap(stellar);\r\n    stellarMarketCap = extractContent(stellarMarketCap);\r\n    let stellarPrice = getCryptoCoinPrice(stellar);\r\n    stellarPrice = extractContent(stellarPrice);\r\n    let stellarVolume = getCryptoCoinVolume(stellar);\r\n    stellarVolume = extractContent(stellarVolume);\r\n    let stellarCirculatingSupply = getCryptoCoinCirculatingSupply(stellar);\r\n    stellarCirculatingSupply = extractContent(stellarCirculatingSupply);\r\n    let stellarChange = getCryptoCoinChange(stellar);\r\n    stellarChange = extractContent(stellarChange);\r\n    let stellarImgGraph = getCryptoCoinPriceGraphImg(stellar);\r\n    stellarImgGraph = extractContent(stellarImgGraph);\r\n\r\n    this.setState({\r\n      stellarName: stellarName,\r\n      stellarMarketCap: stellarMarketCap,\r\n      stellarPrice: stellarPrice,\r\n      stellarVolume: stellarVolume,\r\n      stellarCirculatingSupply: stellarCirculatingSupply,\r\n      stellarChange: stellarChange,\r\n      stellarImgGraph: stellarImgGraph\r\n    });\r\n\r\n    const liteCoin = parsed.getElementsByAttribute('id', 'id-litecoin');\r\n    let liteCoinName = getCryptoCoinName(liteCoin);\r\n    liteCoinName = extractContent(liteCoinName);\r\n    let liteCoinMarketCap = getCryptoCoinMarketCap(liteCoin);\r\n    liteCoinMarketCap = extractContent(liteCoinMarketCap);\r\n    let liteCoinPrice = getCryptoCoinPrice(liteCoin);\r\n    liteCoinPrice = extractContent(liteCoinPrice);\r\n    let liteCoinVolume = getCryptoCoinVolume(liteCoin);\r\n    liteCoinVolume = extractContent(liteCoinVolume);\r\n    let liteCoinCirculatingSupply = getCryptoCoinCirculatingSupply(liteCoin);\r\n    liteCoinCirculatingSupply = extractContent(liteCoinCirculatingSupply);\r\n    let liteCoinChange = getCryptoCoinChange(liteCoin);\r\n    liteCoinChange = extractContent(liteCoinChange);\r\n    let liteCoinImgGraph = getCryptoCoinPriceGraphImg(liteCoin);\r\n    liteCoinImgGraph = extractContent(liteCoinImgGraph);\r\n\r\n    this.setState({\r\n      liteCoinName: liteCoinName,\r\n      liteCoinMarketCap: liteCoinMarketCap,\r\n      liteCoinPrice: liteCoinPrice,\r\n      liteCoinVolume: liteCoinVolume,\r\n      liteCoinCirculatingSupply: liteCoinCirculatingSupply,\r\n      liteCoinChange: liteCoinChange,\r\n      liteCoinImgGraph: liteCoinImgGraph\r\n    });\r\n\r\n    const bitCoinSV = parsed.getElementsByAttribute('id', 'id-bitcoin-sv');\r\n    let bitCoinSVName = getCryptoCoinName(bitCoinSV);\r\n    bitCoinSVName = extractContent(bitCoinSVName);\r\n    let bitCoinSVMarketCap = getCryptoCoinMarketCap(bitCoinSV);\r\n    bitCoinSVMarketCap = extractContent(bitCoinSVMarketCap);\r\n    let bitCoinSVPrice = getCryptoCoinPrice(bitCoinSV);\r\n    bitCoinSVPrice = extractContent(bitCoinSVPrice);\r\n    let bitCoinSVVolume = getCryptoCoinVolume(bitCoinSV);\r\n    bitCoinSVVolume = extractContent(bitCoinSVVolume);\r\n    let bitCoinSVCirculatingSupply = getCryptoCoinCirculatingSupply(bitCoinSV);\r\n    bitCoinSVCirculatingSupply = extractContent(bitCoinSVCirculatingSupply);\r\n    let bitCoinSVChange = getCryptoCoinChange(bitCoinSV);\r\n    bitCoinSVChange = extractContent(bitCoinSVChange);\r\n    let bitCoinSVImgGraph = getCryptoCoinPriceGraphImg(bitCoinSV);\r\n    bitCoinSVImgGraph = extractContent(bitCoinSVImgGraph);\r\n\r\n    this.setState({\r\n      bitCoinSVName: bitCoinSVName,\r\n      bitCoinSVMarketCap: bitCoinSVMarketCap,\r\n      bitCoinSVPrice: bitCoinSVPrice,\r\n      bitCoinSVVolume: bitCoinSVVolume,\r\n      bitCoinSVCirculatingSupply: bitCoinSVCirculatingSupply,\r\n      bitCoinSVChange: bitCoinSVChange,\r\n      bitCoinSVImgGraph: bitCoinSVImgGraph\r\n    });\r\n\r\n    const tether = parsed.getElementsByAttribute('id', 'id-tether');\r\n    let tetherName = getCryptoCoinName(tether);\r\n    tetherName = extractContent(tetherName);\r\n    let tetherMarketCap = getCryptoCoinMarketCap(tether);\r\n    tetherMarketCap = extractContent(tetherMarketCap);\r\n    let tetherPrice = getCryptoCoinPrice(tether);\r\n    tetherPrice = extractContent(tetherPrice);\r\n    let tetherVolume = getCryptoCoinVolume(tether);\r\n    tetherVolume = extractContent(tetherVolume);\r\n    let tetherCirculatingSupply = getCryptoCoinCirculatingSupply(tether);\r\n    tetherCirculatingSupply = extractContent(tetherCirculatingSupply);\r\n    let tetherChange = getCryptoCoinChange(tether);\r\n    tetherChange = extractContent(tetherChange);\r\n    let tetherImgGraph = getCryptoCoinPriceGraphImg(tether);\r\n    tetherImgGraph = extractContent(tetherImgGraph);\r\n\r\n    this.setState({\r\n      tetherName: tetherName,\r\n      tetherMarketCap: tetherMarketCap,\r\n      tetherPrice: tetherPrice,\r\n      tetherVolume: tetherVolume,\r\n      tetherCirculatingSupply: tetherCirculatingSupply,\r\n      tetherChange: tetherChange,\r\n      tetherImgGraph: tetherImgGraph\r\n    });\r\n\r\n    const cardano = parsed.getElementsByAttribute('id', 'id-cardano');\r\n    let cardanoName = getCryptoCoinName(cardano);\r\n    cardanoName = extractContent(cardanoName);\r\n    let cardanoMarketCap = getCryptoCoinMarketCap(cardano);\r\n    cardanoMarketCap = extractContent(cardanoMarketCap);\r\n    let cardanoPrice = getCryptoCoinPrice(cardano);\r\n    cardanoPrice = extractContent(cardanoPrice);\r\n    let cardanoVolume = getCryptoCoinVolume(cardano);\r\n    cardanoVolume = extractContent(cardanoVolume);\r\n    let cardanoCirculatingSupply = getCryptoCoinCirculatingSupply(cardano);\r\n    cardanoCirculatingSupply = extractContent(cardanoCirculatingSupply);\r\n    let cardanoChange = getCryptoCoinChange(cardano);\r\n    cardanoChange = extractContent(cardanoChange);\r\n    let cardanoImgGraph = getCryptoCoinPriceGraphImg(cardano);\r\n    cardanoImgGraph= extractContent(cardanoImgGraph);\r\n\r\n    this.setState({\r\n      cardanoName: cardanoName,\r\n      cardanoMarketCap: cardanoMarketCap,\r\n      cardanoPrice: cardanoPrice,\r\n      cardanoVolume: cardanoVolume,\r\n      cardanoCirculatingSupply: cardanoCirculatingSupply,\r\n      cardanoChange: cardanoChange,\r\n      cardanoImgGraph: cardanoImgGraph\r\n    });\r\n\r\n    const tron = parsed.getElementsByAttribute('id', 'id-tron');\r\n    let tronName = getCryptoCoinName(tron);\r\n    tronName = extractContent(tronName);\r\n    let tronMarketCap = getCryptoCoinMarketCap(tron);\r\n    tronMarketCap = extractContent(tronMarketCap);\r\n    let tronPrice = getCryptoCoinPrice(tron);\r\n    tronPrice = extractContent(tronPrice);\r\n    let tronVolume = getCryptoCoinVolume(tron);\r\n    tronVolume = extractContent(tronVolume);\r\n    let tronCirculatingSupply = getCryptoCoinCirculatingSupply(tron);\r\n    tronCirculatingSupply = extractContent(tronCirculatingSupply);\r\n    let tronChange = getCryptoCoinChange(tron);\r\n    tronChange = extractContent(tronChange);\r\n    let tronImgGraph = getCryptoCoinPriceGraphImg(tron);\r\n    tronImgGraph = extractContent(tronImgGraph);\r\n\r\n    this.setState({\r\n      tronName: tronName,\r\n      tronMarketCap: tronMarketCap,\r\n      tronPrice: tronPrice,\r\n      tronVolume: tronVolume,\r\n      tronCirculatingSupply: tronCirculatingSupply,\r\n      tronChange: tronChange,\r\n      tronImgGraph: tronImgGraph\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      seconds: prevState.seconds + 1\r\n    }));\r\n  } // end getCryptoCoinData\r\n\r\n  setCryptoCoin(cryptoCoin) {\r\n    let cryptoCoinName = getCryptoCoinName(cryptoCoin);\r\n    cryptoCoinName = extractContent(cryptoCoinName);\r\n    let cryptoCoinMarketCap = getCryptoCoinMarketCap(cryptoCoin);\r\n    cryptoCoinMarketCap = extractContent(cryptoCoinMarketCap);\r\n    let cryptoCoinPrice = getCryptoCoinPrice(cryptoCoin);\r\n    cryptoCoinPrice = extractContent(cryptoCoinPrice);\r\n    let cryptoCoinVolume = getCryptoCoinVolume(cryptoCoin);\r\n    cryptoCoinVolume = extractContent(cryptoCoinVolume);\r\n    let cryptoCoinCirculatingSupply = getCryptoCoinCirculatingSupply(cryptoCoin);\r\n    cryptoCoinCirculatingSupply = extractContent(cryptoCoinCirculatingSupply);\r\n    let cryptoCoinChange = getCryptoCoinChange(cryptoCoin);\r\n    cryptoCoinChange = extractContent(cryptoCoinChange);\r\n    let cryptoCoinImgGraph = getCryptoCoinPriceGraphImg(cryptoCoin);\r\n    cryptoCoinImgGraph = extractContent(cryptoCoinImgGraph);\r\n\r\n    this.setState({\r\n      cryptoCoinName: cryptoCoinName,\r\n      cryptoCoinMarketCap: cryptoCoinMarketCap,\r\n      cryptoCoinPrice: cryptoCoinPrice,\r\n      cryptoCoinVolume: cryptoCoinVolume,\r\n      cryptoCoinCirculatingSupply: cryptoCoinCirculatingSupply,\r\n      cryptoCoinChange: cryptoCoinChange,\r\n      cryptoCoinImgGraph: cryptoCoinImgGraph\r\n    });\r\n  } // end setCryptoCoin\r\n\r\n  componentDidMount() {\r\n    if ( this.state.intialCompDidMount ==  false) {\r\n      this.state.intialCompDidMount = true;\r\n      this.interval = setInterval(() => this.getCryptoData(), 10);\r\n    } else {\r\n      this.interval = setInterval(() => this.getCryptoData(), 10000);\r\n    }\r\n  } // end componentDidMount\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  } // end componentWillUnmount\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"crypto-currency-title\">Crypto Currencies Market Capitalization</h1>\r\n          <div className=\"crypto-coin-header-row\">\r\n            <div className=\"crypto-coin-header col-md-1\">Name</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Market Cap</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Price</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Volume (24h)</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Circulating Supply</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Price Change (24h)</div>\r\n            <div className=\"crypto-coin-header col-md-1\">Price Change (7 days)</div>\r\n          </div>\r\n          <span><hr className=\"headerLine\"></hr></span>\r\n          <CryptoCoin\r\n              CryptoCoinNameProp = {this.state.bitCoinName}\r\n              CryptoCoinMarketCapProp = {this.state.bitCoinMarketCap}\r\n              CryptoCoinPriceProp = {this.state.bitCoinPrice}\r\n              CryptoCoinVolumeProp = {this.state.bitCoinVolume}\r\n              CryptoCoinCirculatingSupplyProp = {this.state.bitCoinCirculatingSupply}\r\n              CryptoCoinChangeProp = {this.state.bitCoinChange + '%'}\r\n              CryptoCoinImgGraphProp = {this.state.bitCoinImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.ethereumName}\r\n            CryptoCoinMarketCapProp = {this.state.ethereumMarketCap}\r\n            CryptoCoinPriceProp = {this.state.ethereumPrice}\r\n            CryptoCoinVolumeProp = {this.state.ethereumVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.ethereumCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.ethereumChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.ethereumImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n              CryptoCoinNameProp = {this.state.xrpName}\r\n              CryptoCoinMarketCapProp = {this.state.xrpMarketCap}\r\n              CryptoCoinPriceProp = {this.state.xrpPrice}\r\n              CryptoCoinVolumeProp = {this.state.xrpVolume}\r\n              CryptoCoinCirculatingSupplyProp = {this.state.xrpCirculatingSupply}\r\n              CryptoCoinChangeProp = {this.state.xrpChange + '%'}\r\n              CryptoCoinImgGraphProp = {this.state.xrpImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.eosName}\r\n            CryptoCoinMarketCapProp = {this.state.eosMarketCap}\r\n            CryptoCoinPriceProp = {this.state.eosPrice}\r\n            CryptoCoinVolumeProp = {this.state.eosVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.eosCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.eosChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.eosImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.stellarName}\r\n            CryptoCoinMarketCapProp = {this.state.stellarMarketCap}\r\n            CryptoCoinPriceProp = {this.state.stellarPrice}\r\n            CryptoCoinVolumeProp = {this.state.stellarVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.stellarCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.stellarChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.stellarImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.liteCoinName}\r\n            CryptoCoinMarketCapProp = {this.state.liteCoinMarketCap}\r\n            CryptoCoinPriceProp = {this.state.liteCoinPrice}\r\n            CryptoCoinVolumeProp = {this.state.liteCoinVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.liteCoinCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.liteCoinChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.liteCoinImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.bitCoinSVName}\r\n            CryptoCoinMarketCapProp = {this.state.bitCoinSVMarketCap}\r\n            CryptoCoinPriceProp = {this.state.bitCoinSVPrice}\r\n            CryptoCoinVolumeProp = {this.state.bitCoinSVVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.bitCoinSVCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.bitCoinSVChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.bitCoinSVImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.tetherName}\r\n            CryptoCoinMarketCapProp = {this.state.tetherMarketCap}\r\n            CryptoCoinPriceProp = {this.state.tetherPrice}\r\n            CryptoCoinVolumeProp = {this.state.tetherVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.tetherCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.tetherChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.tetherImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.cardanoName}\r\n            CryptoCoinMarketCapProp = {this.state.cardanoMarketCap}\r\n            CryptoCoinPriceProp = {this.state.cardanoPrice}\r\n            CryptoCoinVolumeProp = {this.state.cardanoVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.cardanoCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.cardanoChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.cardanoImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n          <CryptoCoin\r\n            CryptoCoinNameProp = {this.state.tronName}\r\n            CryptoCoinMarketCapProp = {this.state.tronMarketCap}\r\n            CryptoCoinPriceProp = {this.state.tronPrice}\r\n            CryptoCoinVolumeProp = {this.state.tronVolume}\r\n            CryptoCoinCirculatingSupplyProp = {this.state.tronCirculatingSupply}\r\n            CryptoCoinChangeProp = {this.state.tronChange + '%'}\r\n            CryptoCoinImgGraphProp = {this.state.tronImgGraph}\r\n          />\r\n          <span><hr className=\"rowLine\"></hr></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}